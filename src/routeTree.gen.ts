/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CartPageImport } from './routes/cartPage'
import { Route as IndexImport } from './routes/index'
import { Route as ComponentsOutletsImport } from './routes/components/outlets'
import { Route as ComponentsHeaderImport } from './routes/components/header'
import { Route as ComponentsFirstMainSectionImport } from './routes/components/first-main-section'

// Create/Update Routes

const CartPageRoute = CartPageImport.update({
  id: '/cartPage',
  path: '/cartPage',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsOutletsRoute = ComponentsOutletsImport.update({
  id: '/components/outlets',
  path: '/components/outlets',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsHeaderRoute = ComponentsHeaderImport.update({
  id: '/components/header',
  path: '/components/header',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsFirstMainSectionRoute = ComponentsFirstMainSectionImport.update(
  {
    id: '/components/first-main-section',
    path: '/components/first-main-section',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cartPage': {
      id: '/cartPage'
      path: '/cartPage'
      fullPath: '/cartPage'
      preLoaderRoute: typeof CartPageImport
      parentRoute: typeof rootRoute
    }
    '/components/first-main-section': {
      id: '/components/first-main-section'
      path: '/components/first-main-section'
      fullPath: '/components/first-main-section'
      preLoaderRoute: typeof ComponentsFirstMainSectionImport
      parentRoute: typeof rootRoute
    }
    '/components/header': {
      id: '/components/header'
      path: '/components/header'
      fullPath: '/components/header'
      preLoaderRoute: typeof ComponentsHeaderImport
      parentRoute: typeof rootRoute
    }
    '/components/outlets': {
      id: '/components/outlets'
      path: '/components/outlets'
      fullPath: '/components/outlets'
      preLoaderRoute: typeof ComponentsOutletsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cartPage': typeof CartPageRoute
  '/components/first-main-section': typeof ComponentsFirstMainSectionRoute
  '/components/header': typeof ComponentsHeaderRoute
  '/components/outlets': typeof ComponentsOutletsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cartPage': typeof CartPageRoute
  '/components/first-main-section': typeof ComponentsFirstMainSectionRoute
  '/components/header': typeof ComponentsHeaderRoute
  '/components/outlets': typeof ComponentsOutletsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cartPage': typeof CartPageRoute
  '/components/first-main-section': typeof ComponentsFirstMainSectionRoute
  '/components/header': typeof ComponentsHeaderRoute
  '/components/outlets': typeof ComponentsOutletsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cartPage'
    | '/components/first-main-section'
    | '/components/header'
    | '/components/outlets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cartPage'
    | '/components/first-main-section'
    | '/components/header'
    | '/components/outlets'
  id:
    | '__root__'
    | '/'
    | '/cartPage'
    | '/components/first-main-section'
    | '/components/header'
    | '/components/outlets'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartPageRoute: typeof CartPageRoute
  ComponentsFirstMainSectionRoute: typeof ComponentsFirstMainSectionRoute
  ComponentsHeaderRoute: typeof ComponentsHeaderRoute
  ComponentsOutletsRoute: typeof ComponentsOutletsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartPageRoute: CartPageRoute,
  ComponentsFirstMainSectionRoute: ComponentsFirstMainSectionRoute,
  ComponentsHeaderRoute: ComponentsHeaderRoute,
  ComponentsOutletsRoute: ComponentsOutletsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/cartPage",
        "/components/first-main-section",
        "/components/header",
        "/components/outlets"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/cartPage": {
      "filePath": "cartPage.jsx"
    },
    "/components/first-main-section": {
      "filePath": "components/first-main-section.jsx"
    },
    "/components/header": {
      "filePath": "components/header.jsx"
    },
    "/components/outlets": {
      "filePath": "components/outlets.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
